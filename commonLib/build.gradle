

apply plugin: 'com.android.library'
// apply from: '../config/quality.gradle'
apply plugin: 'org.greenrobot.greendao'

greendao {
    schemaVersion 1
    targetGenDir 'src/main/java'
    daoPackage 'com.android.common.core.module.multilang'
}

android {
    compileSdkVersion 34
    // buildToolsVersion '26.0.2'

    dataBinding {
        enabled = true
    }

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 1
        versionName '1.1.32'
        multiDexEnabled true

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        def BASE_URL = 'BASE_URL'
        def MOCK_MODE = 'MOCK_MODE'
        release {
            buildConfigField 'Boolean', MOCK_MODE, 'true'
            buildConfigField 'String', BASE_URL, '"https://api.douban.com/"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField 'Boolean', MOCK_MODE, 'true'
            buildConfigField 'String', BASE_URL, '"https://api.douban.com/"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
//    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })
    testImplementation 'junit:junit:4.12'
    // ui
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'com.google.android.material:material:1.2.1'
    api 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    // glide
//    api 'androidx.legacy:legacy-support-v4:1.0.0'
    // 图片加载框架
    api 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
//    api 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'
    //    api 'com.github.bumptech.glide:glide:4.3.1'
    //    annotationProcessor 'com.github.bumptech.glide:compiler:4.3.1'
    //    api 'com.github.bumptech.glide:okhttp3-integration:4.3.1'
    // okhttp3
    api 'com.squareup.okhttp3:okhttp:3.9.1'
    // retrofit2
    api 'com.squareup.retrofit2:retrofit:2.3.0'
    api 'com.squareup.retrofit2:converter-gson:2.3.0'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    // RxLifecycle
    api 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.1'
    // retrofit2调用okhttp3写日志
    api 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    // RX系列
    api 'io.reactivex.rxjava2:rxjava:2.1.3'
    api 'io.reactivex.rxjava2:rxandroid:2.0.1'
    api 'com.google.code.gson:gson:2.8.0'
    api 'org.greenrobot:greendao:3.3.0'
    api 'io.github.cymchad:BaseRecyclerViewAdapterHelper:3.0.14'
    // 统计
//    api 'com.umeng.analytics:analytics:6.1.2'
}

/**
 * 正常发布bintray
 * 执行命令 gradlew clean build bintrayUpload -PbintrayUser=用户名 -PbintrayKey=用户APIkey -PdryRun=false
 *
 *
 * 如发现Skipping upload for missing file '***\build\publications\release\pom-default.xml'
 * 选择android studio右侧的gradle 选择需要发布的包里build文件夹 先 clean 后build
 * 之后选择publishing文件夹执行generatePomFileForReleasePublication
 * 在执行 publishReleasePublicationToMavenLocal
 * 最候在底部Terminal命令行中执行gradlew bintrayUpload -PbintrayUser=用户名 -PbintrayKey=用户APIkey -PdryRun=false
 */

//apply from: '../config/maven-common.gradle'
//
///**
// * 执行命令 gradle uploadArchives
// */
//apply from: '../config/snapshot-common.gradle'
//
///**
// * 执行命令 gradle sonarqube
// */
//apply from: '../config/sonarqube.gradle'

